---
name: ansible-test

on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
  pull_request:
  # Run CI once per day (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still testing against latest version of ansible-test for each ansible-base version
  schedule:
    - cron: '0 6 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ansible-sanity-tests:
    name: Sanity (â’¶${{ matrix.ansible }}+py${{ matrix.python }})
    strategy:
      matrix:
        ansible:
          # It's important that Sanity is tested against all stable-X.Y branches
          # Testing against `devel` may fail as new tests are added.
          - stable-2.9
          - stable-2.10
        python:
          - 3.7
          - 3.8
        exclude:
          - python: 3.8  # blocked by ansible/ansible#70155
    runs-on: ubuntu-latest
    steps:
      # ansible-test requires the collection to be in a directory in the form
      # .../ansible_collections/NAMESPACE/COLLECTION_NAME/

      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/t_systems_mms/letsencrypt

      - name: Set up Python ${{ matrix.ansible }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      # Install the head of the given branch (devel, stable-2.10)
      - name: Install ansible-base (${{ matrix.ansible }})
        run: python -m pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      # run ansible-test sanity inside of Docker.
      # The docker container has all the pinned dependencies that are required.
      # Explicity specify the version of Python we want to test
      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color --python ${{ matrix.python }}
        working-directory: ./ansible_collections/t_systems_mms/letsencrypt

  linting:
    name: Ansible Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/t_systems_mms/letsencrypt

      - name: Run Linting
        uses: ansible/ansible-lint-action@master
        with:
          targets: ansible_collections/t_systems_mms/letsencrypt/roles/letsencrypt
          args: "-c ansible_collections/t_systems_mms/letsencrypt/.ansible-lint"

  integration-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ansible_collections/t_systems_mms/letsencrypt
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - stable-2.9
          - stable-2.10
        python:
          - 2.7
          - 3.7
          - 3.8
    # start nginx as service to test validation via http-challenge local path
    services:
      nginx:
        image: nginx
        volumes:
          - /tmp:/usr/share/nginx/html
        ports:
          - 5002:80

    steps:
      - name: Check out code to collections-folder, so ansible finds it
        uses: actions/checkout@v2
        with:
          path: ansible_collections/t_systems_mms/letsencrypt

      - name: Run Pebble and challtestsrv
        run: curl https://raw.githubusercontent.com/letsencrypt/pebble/master/docker-compose.yml | docker-compose -f - up -d

      - name: Set up Pebble
        run: curl --request POST --data '{"ip":"10.30.50.1"}' http://localhost:8055/set-default-ipv4

      # change uid of nginx user in nginx service container to uid of github runner id to allow reading of created hash file by nginx process
      - name: change uid of nginx user in container
        run: docker exec -i ${{ job.services.nginx.id }} usermod -u 1001 nginx

      # restart docker container to start nginx process with new uid
      - name: restart docker container of service
        run: docker restart ${{ job.services.nginx.id }}

      - name: Set up Python ${{ matrix.ansible }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install ansible-base (${{ matrix.ansible }})
        run: python -m pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      - name: build the collection
        run: ansible-galaxy collection build

      - name: install the collection
        run: ansible-galaxy collection install -p /home/runner/work/ansible-collection-letsencrypt/ansible-collection-letsencrypt *.tar.gz

      - name: install community.crypto collection
        run: ansible-galaxy collection install -p /home/runner/work/ansible-collection-letsencrypt/ansible-collection-letsencrypt community.crypto

      - name: Run integration tests
        run: ansible-test integration -v --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --requirements
        working-directory: ./ansible_collections/t_systems_mms/letsencrypt
