---
# split top_level for zone_name and if subdomain is defined add subdomain to relative_name
- name: add a new TXT record to the SAN top-level domains
  azure_rm_dnsrecordset:
    resource_group: "{{ azure_resource_group }}"
    relative_name: "{{ '_acme-challenge' }}{{ '' if item | replace('*.','') == (item.split('.')[-2:] | join('.')) else '.' }}{{ (item | replace('*.','')).split('.')[:-2] | join('.') }}"
    zone_name: "{{ item.split('.')[-2:] | join('.') }}"
    record_mode: append
    state: present
    record_type: TXT
    records:
    - entry: "{{ challenge['challenge_data'][item]['dns-01']['resource_value'] }}"
  loop: "{{ domain.subject_alt_name.top_level }}"
  when: domain.subject_alt_name.top_level is defined

# split second_level for zone_name and if subdomain is defined add subdomain to relative_name
- name: add a new TXT record to the SAN second-level domains
  azure_rm_dnsrecordset:
    resource_group: "{{ azure_resource_group }}"
    relative_name: "{{ '_acme-challenge' }}{{ '' if item | replace('*.','') == (item.split('.')[-3:] | join('.')) else '.' }}{{ (item | replace('*.','')).split('.')[:-3] | join('.') }}"
    zone_name: "{{ item.split('.')[-3:] | join('.') }}"
    record_mode: append
    state: present
    record_type: TXT
    records:
    - entry: "{{ challenge['challenge_data'][item]['dns-01']['resource_value'] }}"
  loop: "{{ domain.subject_alt_name.second_level }}"
  when: domain.subject_alt_name.second_level is defined

- name: Let the challenge be validated and retrieve the cert and intermediate certificate
  acme_certificate:
    account_key_src: "{{ account_key_path }}"
    account_email: "{{ account_email }}"
    csr: "{{ csr_path }}"
    cert: "{{ cert_path }}"
    fullchain: "{{ fullchain_path }}"
    chain: "{{ intermediate_path }}"
    challenge: dns-01
    force: "{{ force_renewal | default(false) }}"
    acme_directory: "{{ acme_directory }}"
    acme_version: 2
    terms_agreed: true
    remaining_days: "{{ remaining_days }}"
    data: "{{ challenge }}"

- name: remove created SAN top-level TXT records to keep DNS zone clean
  azure_rm_dnsrecordset:
    resource_group: "{{ azure_resource_group }}"
    relative_name: "{{ '_acme-challenge' }}{{ '' if item | replace('*.','') == (item.split('.')[-2:] | join('.')) else '.' }}{{ (item | replace('*.','')).split('.')[:-2] | join('.') }}"
    zone_name: "{{ item.split('.')[-2:] | join('.') }}"
    state: absent
    record_type: TXT
    records:
      - entry: "{{ challenge['challenge_data'][item]['dns-01']['resource_value'] }}"
  loop: "{{ domain.subject_alt_name.top_level }}"
  when: domain.subject_alt_name.top_level is defined

- name: remove created SAN second-level TXT records to keep DNS zone clean
  azure_rm_dnsrecordset:
    resource_group: "{{ azure_resource_group }}"
    relative_name: "{{ '_acme-challenge' }}{{ '' if item | replace('*.','') == (item.split('.')[-3:] | join('.')) else '.' }}{{ (item | replace('*.','')).split('.')[:-3] | join('.') }}"
    zone_name: "{{ item.split('.')[-3:] | join('.') }}"
    state: absent
    record_type: TXT
    records:
      - entry: "{{ challenge['challenge_data'][item]['dns-01']['resource_value'] }}"
  loop: "{{ domain.subject_alt_name.second_level }}"
  when: domain.subject_alt_name.second_level is defined
