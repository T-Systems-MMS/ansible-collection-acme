---
- name: Create CSR for certificate
  openssl_csr:
    path: "{{ csr_path }}"
    privatekey_path: "{{ private_key_path }}"
    email_address: "{{ domain.email_address }}"
    subject_alt_name: "DNS:{{ domain.subject_alt_name | join(',DNS:') }}"
  when:
    - domain.subject_alt_name.top_level is undefined and domain.subject_alt_name.second_level is undefined

- name: Create CSR for certificate
  openssl_csr:
    path: "{{ csr_path }}"
    privatekey_path: "{{ private_key_path }}"
    email_address: "{{ domain.email_address }}"
    subject_alt_name: "DNS:{{ (domain.subject_alt_name.top_level | default([])) | union(domain.subject_alt_name.second_level | default([])) | join(',DNS:') }}"
  when:
    - domain.subject_alt_name.top_level is defined or domain.subject_alt_name.second_level is defined

- name: Create a challenge for {{ domain.certificate_name }} using a account key file.
  acme_certificate:
    account_key_src: "{{ account_key_path }}"
    account_email: "{{ account_email }}"
    csr: "{{ csr_path }}"
    cert: "{{ cert_path }}"
    challenge: dns-01
    force: "{{ force_renewal | default(false) }}"
    acme_directory: "{{ acme_directory }}"
    acme_version: 2
    terms_agreed: true
    remaining_days: "{{ remaining_days }}"
    validate_certs: "{{ validate_certs | default(true) }}"
  register: challenge

- name: do dns challenge autodns
  include_tasks: dns-challenge-autodns.yml
  when:
    - letsencrypt_do_dns_challenge | bool
    - letsencrypt_dns_provider == "autodns"

- name: do dns challenge azure
  include_tasks: dns-challenge-azure.yml
  when:
    - letsencrypt_do_dns_challenge | bool
    - letsencrypt_dns_provider == "azure"

- name: do dns challenge hetzner
  include_tasks: dns-challenge-hetzner.yml
  when:
    - letsencrypt_do_dns_challenge | bool
    - letsencrypt_dns_provider == "hetzner"

- name: do dns challenge for testing with pebble
  include_tasks: dns-challenge-pebble.yml
  when:
    - letsencrypt_do_dns_challenge | bool
    - letsencrypt_dns_provider == "pebble"

- name: do dns challenge openstack
  include_tasks: dns-challenge-openstack.yml
  when:
    - letsencrypt_do_dns_challenge | bool
    - letsencrypt_dns_provider == "openstack"
