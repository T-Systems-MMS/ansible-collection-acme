---
- name: Create CSR for certificate
  openssl_csr:
    path: "{{ acme_csr_path }}"
    privatekey_path: "{{ acme_private_key_path }}"
    acme_email_address: "{{ domain.acme_email_address }}"
    acme_subject_alt_name: "DNS:{{ domain.acme_subject_alt_name | join(',DNS:') }}"
  when:
    - domain.acme_subject_alt_name.top_level is undefined and domain.acme_subject_alt_name.second_level is undefined

- name: Create CSR for certificate
  openssl_csr:
    path: "{{ acme_csr_path }}"
    privatekey_path: "{{ acme_private_key_path }}"
    acme_email_address: "{{ domain.acme_email_address }}"
    acme_subject_alt_name: "DNS:{{ (domain.acme_subject_alt_name.top_level | default([])) | union(domain.acme_subject_alt_name.second_level | default([])) | join(',DNS:') }}"
  when:
    - domain.acme_subject_alt_name.top_level is defined or domain.acme_subject_alt_name.second_level is defined

- name: Create a challenge for {{ domain.acme_certificate_name }} using a account key file.
  acme_certificate:
    account_key_src: "{{ acme_account_key_path }}"
    account_email: "{{ account_email }}"
    csr: "{{ acme_csr_path }}"
    cert: "{{ acme_cert_path }}"
    challenge: dns-01
    force: "{{ acme_force_renewal | default(false) }}"
    acme_directory: "{{ acme_directory }}"
    acme_version: 2
    terms_agreed: true
    acme_remaining_days: "{{ acme_remaining_days }}"
    validate_certs: "{{ validate_certs | default(true) }}"
  register: challenge

- name: "do DNS challenge with provider {{ acme_dns_provider }}"
  include_tasks: "{{ item }}"
  with_first_found:
    - "dns-challenge/{{ acme_dns_provider }}.yml"
    - challenge-unknown.yml
